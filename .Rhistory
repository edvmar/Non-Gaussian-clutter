eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
rk(1, shape = 1, scale = 1, intensity = FALSE)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(1, shape = 1, scale = 1, intensity = FALSE)
b = rk(1, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
#-------Task c)-------
# Here we have:
#   Compound Gaussian detector
#   Gaussian clutter
#-------Task d)-------
# Here we have:
#   Compound Gaussian detector
#   Compound Gaussian clutter
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(1, shape = 1, scale = 1, intensity = FALSE)
b = rk(1, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 10^8 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(1, shape = 1, scale = 1, intensity = FALSE)
b = rk(1, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
y1 = z + c
y0 = c
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 1000 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(n, shape = 1, scale = 1, intensity = FALSE)
b = rk(n, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
y1 = z + c
y0 = c
install.packages("cmvnorm")
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
library(cmvnorm)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 1000 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(n, shape = 1, scale = 1, intensity = FALSE)
b = rk(n, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
y1 = z + c
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
library(cmvnorm)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 1000 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
z <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(n, shape = 1, scale = 1, intensity = FALSE)
b = rk(n, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
r_0 = rep(0, n)
for(i in i=1:n){
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
library(cmvnorm)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 1000 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
s <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(n, shape = 1, scale = 1, intensity = FALSE)
b = rk(n, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
r_0 = rep(0, n)
for(i in i=1:n){
if(!is.null(dev.list())) dev.off()
rm(list=ls())
cat("\014")
setwd("~/OneDrive/Dokument/Skolan/Kurser/Aktiva/ProjectAtSaab/git_code/Non-Gaussian-clutter")
library(kdist)
library(cmvnorm)
#-------Task b)-------
# Here we have:
#   Gaussian detector
#   Compound Gaussian clutter
n = 1000 # Number of simulations in Monte Carlo
alpha = 2
theta = 0
s <- complex(modulus = alpha, argument = theta)
eta = 3
a = rk(n, shape = 1, scale = 1, intensity = FALSE)
b = rk(n, shape = 1, scale = 1, intensity = FALSE)
c = complex(real = a, imaginary = b)
r_0 = rep(0, n)
for(i in 1:n){
r_0[i] <- rcmvnorm(1, c[i], 1)
}
rcmvnorm(1, 1+i, 1)
rcmvnorm(1, [1,1], 1)
rcmvnorm(1, c(1,1), 1)
